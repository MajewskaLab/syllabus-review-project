summary(lm(All_WC ~ Lead_Track, data = syl))
summary(lm(Attend_WC ~ Lead_Track, data = syl))
summary(lm(Exam_Grade_Prop ~ Lead_Track, data = syl))
summary(lm(Exam_Grade_Prop ~ Lead_Track, data = syl))
summary(lm(All_WC ~ Lead_Track, data = syl))
summary(lm(AttendPolarity ~ Lead_Track, data = syl))
summary(lm(GradingPolarity ~ Lead_Track, data = syl))
summary(lm(GradingSubjectivity ~ Lead_Track, data = syl))
summary(lm(AttendSubjectivity ~ Lead_Track, data = syl))
summary(lm(All_BigWords ~ Lead_Track, data = syl))
summary(lm(All_negate ~ Lead_Track, data = syl))
summary(lm(All_power ~ Lead_Track, data = syl))
summary(lm(All_tone_pos ~ Lead_Track, data = syl))
summary(lm(All_tone_neg ~ Lead_Track, data = syl))
summary(multinom(GradeTone1~Lead_Track, data = syl))
install.packages("nnet")
require(nnet)
summary(multinom(GradeTone1~Lead_Track, data = syl))
summary(multinom(GradeTone1~Lead_Track, data = syl2))
install.packages("mlogit")
library(mlogit)
summary(mlogit(GradeTone1~Lead_Track | 0, syl))
summary(mlogit(GradeTone1~Lead_Track, syl))
summary(multinom(GradeTone1~Lead_Track, data = syl2))
summary(multinom(Lead_Track~ GradeTone1, data = syl2))
summary(multinom(GradeTone1~Lead_Track, data = syl2))
summary(multinom(GradeTone1~Lead_Track, data = syl2))
###
###clear all work space
rm(list=ls())
graphics.off()
require(tidyverse)
#import data
syl <- read_csv("data/masterDF.csv")
View(syl)
syl$Class_Size_Cat<-factor(syl$Class_Size_Cat, levels = c("small", "medium", "large"), labels = c("small", "medium", "large"))
df<-syl %>%
group_by(Lead_Rank2, GradeTone1) %>%
count(total=n()) %>%
filter(!is.na(GradeTone1)) %>%
filter(Lead_Rank2 %in% c("ASSISTANT PROFESSOR","ASSOCIATE PROFESSOR","PROFESSOR", "Dean Chair Director","LECTURER"))
df$Lead_Rank2<-factor(df$Lead_Rank2, levels = c("ASSISTANT PROFESSOR","ASSOCIATE PROFESSOR","PROFESSOR","Dean Chair Director","LECTURER"), labels = c("Asst. Professor", "Assoc. Professor", "Full Professor", "Dean Chair Director","Lecturer"))
df %>%
ggplot(aes(y=GradeTone1, x=Lead_Rank2, size = n)) +
geom_point(alpha=0.5) +
scale_size_continuous("Count", range = c(1, 20)) +
geom_text(aes(label = n), size = 4) +
theme_minimal(base_size = 5 * .pt)
syl$GradeTone1<- as.factor(syl$GradeTone1)
syl$Lead_Rank2<- as.factor(syl$Lead_Rank2)
syl2<-syl %>%
filter(Lead_Rank2 %in% c("ASSISTANT PROFESSOR","ASSOCIATE PROFESSOR","PROFESSOR", "Dean Chair Director","LECTURER"))
syl2<-syl %>%
filter(Lead_Rank2 %in% c("ASSISTANT PROFESSOR","ASSOCIATE PROFESSOR","PROFESSOR", "Dean Chair Director","LECTURER"))
summary(lm(Exam_Grade_Prop ~ Year, data = syl))
summary(lm(Exam_Grade_Prop ~ Department_Code, data = syl))
summary(lm(Exam_Grade_Prop ~ Lead_Rank2, data = syl))
summary(lm(Exam_Grade_Prop ~ Lead_Rank2, data = syl2))
summary(lm(All_WC ~ Year, data = syl2))
summary(lm(Grade_WC ~ Year , data = syl))
summary(lm(Attend_WC ~ Year, data = syl))
summary(lm(Attend_WC ~ Lead_Rank2, data = syl2))
summary(lm(Grade_WC ~ Lead_Rank2, data = syl2))
summary(lm(Attend_WC ~ Lead_Track, data = syl))
summary(lm(Grade_WC ~ Lead_Track, data = syl))
summary(lm(All_WC ~ Lead_Track, data = syl))
summary(lm(Exam_Grade_Prop ~ Lead_Track, data = syl))
summary(lm(All_tone_neg ~ Lead_Track, data = syl))
summary(multinom(GradeTone1~Lead_Track, data = syl2))
require(nnet)
syl %>%
filter(!is.na(Year)) %>%
group_by(Year) %>%
summarize(count = n()) %>%
ggplot(aes(x = factor(Year), y = count)) +
geom_bar(stat="identity")+
theme_classic()+
labs(y = "Count of syllabi", x = "Year")+
theme(axis.text=element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=12),
legend.text = element_text(size=12),
legend.title = element_text(size=12))+
scale_y_continuous(expand = c(0,0))
syl %>%
filter(!is.na(Year)) %>%
group_by(Year, Learning_Outcomes_Present) %>%
count(total = n()) %>%
filter(Learning_Outcomes_Present=="Yes") %>%
ggplot(aes(x = factor(Year), y = n)) +
geom_bar(stat="identity")+
theme_classic()+
labs(y = "Syllabi with LOs", x = "Year")+
theme(axis.text=element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=12),
legend.text = element_text(size=12),
legend.title = element_text(size=12))+
scale_y_continuous(expand = c(0,0))
syl %>%
filter(!is.na(Year)) %>%
group_by(Year, DEI_Statement_Present) %>%
summarize(count = n()) %>%
filter(DEI_Statement_Present=="Yes") %>%
ggplot(aes(x = factor(Year), y = count)) +
geom_bar(stat="identity")+
theme_classic()+
labs(y = "Count of syllabi with diversity statements", x = "Year")+
theme(axis.text=element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=12),
legend.text = element_text(size=12),
legend.title = element_text(size=12))+
scale_y_continuous(expand = c(0,0))
summary(multinom(GradeTone1~Lead_Track, data = syl2))
syl %>%
group_by(Class_Size_Cat, AttendTone1) %>%
count(total=n()) %>%
filter(!is.na(AttendTone1)) %>%
filter(!is.na(Class_Size_Cat)) %>%
ggplot(aes(y=AttendTone1, x=Class_Size_Cat, size = n)) +
geom_point(alpha=0.5) +
scale_size_continuous("Count", range = c(1, 20)) +
geom_text(aes(label = n), size = 4) +
theme_minimal(base_size = 5 * .pt)
syl %>%
group_by(Class_Size_Cat, GradeTone1) %>%
count(total=n()) %>%
filter(!is.na(AttendTone1)) %>%
filter(!is.na(Class_Size_Cat)) %>%
ggplot(aes(y=AttendTone1, x=Class_Size_Cat, size = n)) +
geom_point(alpha=0.5) +
scale_size_continuous("Count", range = c(1, 20)) +
geom_text(aes(label = n), size = 4) +
theme_minimal(base_size = 5 * .pt)
syl %>%
group_by(Class_Size_Cat, GradeTone1) %>%
count(total=n()) %>%
filter(!is.na(GradeTone1)) %>%
filter(!is.na(Class_Size_Cat)) %>%
ggplot(aes(y=GradeTone1, x=Class_Size_Cat, size = n)) +
geom_point(alpha=0.5) +
scale_size_continuous("Count", range = c(1, 20)) +
geom_text(aes(label = n), size = 4) +
theme_minimal(base_size = 5 * .pt)
####
syl %>%
filter(!is.na(Year)) %>%
#  filter(AttendWordCount<300) %>%
# filter(Department_Code=="BIOL") %>%
ggplot(aes(x = Attend_WC, y = Class_Size)) +
geom_point()+
geom_smooth(method = "lm",se = F)+
theme_classic()+
labs(y = "Class Size", x = "Attendance Policy Word Count")+
theme(axis.text=element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=12),
legend.text = element_text(size=12),
legend.title = element_text(size=12))
syl %>%
#filter(!is.na(Year)) %>%
#  filter(AttendWordCount<300) %>%
# filter(Course_Number_Suffix =="L") %>%
ggplot(aes(y = Attend_WC, x = Class_Size,color = Division)) +
geom_point()+
geom_smooth(method = "lm",se = F)+
theme_classic()+
labs(x = "Class Size", y = "Attendance Policy Word Count")+
theme(axis.text=element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=12),
legend.text = element_text(size=12),
legend.title = element_text(size=12))
syl %>%
#filter(!is.na(Year)) %>%
#  filter(AttendWordCount<300) %>%
filter(Course_Number_Suffix =="L") %>%
ggplot(aes(y = Attend_WC, x = Class_Size,color = Division)) +
geom_point()+
geom_smooth(method = "lm",se = F)+
theme_classic()+
labs(x = "Class Size", y = "Attendance Policy Word Count")+
theme(axis.text=element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=12),
legend.text = element_text(size=12),
legend.title = element_text(size=12))
syl %>%
#filter(!is.na(Year)) %>%
#  filter(AttendWordCount<300) %>%
#filter(Course_Number_Suffix =="L") %>%
ggplot(aes(y = Attend_WC, x = Class_Size,color = Division)) +
geom_point()+
geom_smooth(method = "lm",se = F)+
theme_classic()+
labs(x = "Class Size", y = "Attendance Policy Word Count")+
theme(axis.text=element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=12),
legend.text = element_text(size=12),
legend.title = element_text(size=12))
syl %>%
#filter(!is.na(Year)) %>%
# filter(GradingWordCount<400) %>%
# filter(Department_Code=="BIOL") %>%
ggplot(aes(x = Grade_WC, y = Class_Size, color = Division)) +
geom_point()+
geom_smooth(method = "lm", se = F)+
theme_classic()+
labs(y = "Class Size", x = "Grading Policy Word Count")+
theme(axis.text=element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=12),
legend.text = element_text(size=12),
legend.title = element_text(size=12))
syl %>%
#filter(!is.na(Year)) %>%
# filter(GradingWordCount<400) %>%
# filter(Department_Code=="BIOL") %>%
ggplot(aes(y = Grade_WC, x = Class_Size, color = Division)) +
geom_point()+
geom_smooth(method = "lm", se = F)+
theme_classic()+
labs(x = "Class Size", y = "Grading Policy Word Count")+
theme(axis.text=element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=12),
legend.text = element_text(size=12),
legend.title = element_text(size=12))
df3 %>%
ggplot(aes(y=AttendTone1, x=Lead_Track, size = n )) +
geom_point(alpha=0.5) +
scale_size_continuous("Count", range = c(1, 20)) +
geom_text(aes(label = n), size = 4) +
theme_minimal(base_size = 5 * .pt)
###
###clear all work space
rm(list=ls())
graphics.off()
require(tidyverse)
#import data
syl <- read_csv("data/masterDF.csv")
syl$Class_Size_Cat<-factor(syl$Class_Size_Cat, levels = c("small", "medium", "large"), labels = c("small", "medium", "large"))
df<-syl %>%
group_by(Lead_Rank2, GradeTone1) %>%
count(total=n()) %>%
filter(!is.na(GradeTone1)) %>%
filter(Lead_Rank2 %in% c("ASSISTANT PROFESSOR","ASSOCIATE PROFESSOR","PROFESSOR", "Dean Chair Director","LECTURER"))
df$Lead_Rank2<-factor(df$Lead_Rank2, levels = c("ASSISTANT PROFESSOR","ASSOCIATE PROFESSOR","PROFESSOR","Dean Chair Director","LECTURER"), labels = c("Asst. Professor", "Assoc. Professor", "Full Professor", "Dean Chair Director","Lecturer"))
df %>%
ggplot(aes(y=GradeTone1, x=Lead_Rank2, size = n)) +
geom_point(alpha=0.5) +
scale_size_continuous("Count", range = c(1, 20)) +
geom_text(aes(label = n), size = 4) +
theme_minimal(base_size = 5 * .pt)
syl$GradeTone1<- as.factor(syl$GradeTone1)
syl$Lead_Rank2<- as.factor(syl$Lead_Rank2)
syl2<-syl %>%
filter(Lead_Rank2 %in% c("ASSISTANT PROFESSOR","ASSOCIATE PROFESSOR","PROFESSOR", "Dean Chair Director","LECTURER"))
summary(lm(Exam_Grade_Prop ~ Year, data = syl))
summary(lm(Exam_Grade_Prop ~ Year, data = syl))
summary(lm(Exam_Grade_Prop ~ Department_Code, data = syl))
summary(lm(Exam_Grade_Prop ~ Lead_Rank2, data = syl2))
summary(lm(All_WC ~ Year, data = syl2))
summary(lm(Grade_WC ~ Year , data = syl))
summary(lm(Attend_WC ~ Year, data = syl))
summary(lm(Attend_WC ~ Lead_Rank2, data = syl2))
summary(lm(Grade_WC ~ Lead_Rank2, data = syl2))
summary(lm(All_WC ~ Lead_Rank2, data = syl2))
summary(lm(Attend_WC ~ Lead_Track, data = syl))
summary(lm(Grade_WC ~ Lead_Track, data = syl))
summary(lm(All_WC ~ Lead_Track, data = syl))
summary(lm(Exam_Grade_Prop ~ Lead_Track, data = syl))
summary(lm(All_tone_neg ~ Lead_Track, data = syl))
#multinomial logistic regression
require(nnet)
summary(multinom(GradeTone1~Lead_Track, data = syl2))
summary(mlogit(GradeTone1~Lead_Track, syl))
###
###clear all work space
rm(list=ls())
graphics.off()
require(tidyverse)
#import data
syl <- read_csv("data/masterDF.csv")
syl$Class_Size_Cat<-factor(syl$Class_Size_Cat, levels = c("small", "medium", "large"), labels = c("small", "medium", "large"))
df<-syl %>%
group_by(Lead_Rank2, GradeTone1) %>%
count(total=n()) %>%
filter(!is.na(GradeTone1)) %>%
filter(Lead_Rank2 %in% c("ASSISTANT PROFESSOR","ASSOCIATE PROFESSOR","PROFESSOR", "Dean Chair Director","LECTURER"))
df$Lead_Rank2<-factor(df$Lead_Rank2, levels = c("ASSISTANT PROFESSOR","ASSOCIATE PROFESSOR","PROFESSOR","Dean Chair Director","LECTURER"), labels = c("Asst. Professor", "Assoc. Professor", "Full Professor", "Dean Chair Director","Lecturer"))
df %>%
ggplot(aes(y=GradeTone1, x=Lead_Rank2, size = n)) +
geom_point(alpha=0.5) +
scale_size_continuous("Count", range = c(1, 20)) +
geom_text(aes(label = n), size = 4) +
theme_minimal(base_size = 5 * .pt)
syl$GradeTone1<- as.factor(syl$GradeTone1)
syl$Lead_Rank2<- as.factor(syl$Lead_Rank2)
syl2<-syl %>%
filter(Lead_Rank2 %in% c("ASSISTANT PROFESSOR","ASSOCIATE PROFESSOR","PROFESSOR", "Dean Chair Director","LECTURER"))
syl %>%
#filter(!is.na(Year)) %>%
#  filter(AttendWordCount<300) %>%
#filter(Course_Number_Suffix =="L") %>%
ggplot(aes(y = Attend_WC, x = Class_Size,color = Division)) +
geom_point()+
geom_smooth(method = "lm",se = F)+
theme_classic()+
labs(x = "Class Size", y = "Attendance Policy Word Count")+
theme(axis.text=element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=12),
legend.text = element_text(size=12),
legend.title = element_text(size=12))
df3<-syl %>%
group_by(Lead_Track, AttendTone1) %>%
count(total=n()) %>%
filter(!is.na(AttendTone1)) %>%
filter(!is.na(Lead_Track))
source("~/Documents/GitHub/syllabus-review-project/R coding/02_FiguresPster.R", echo=TRUE)
df3<-syl %>%
group_by(Lead_Track, AttendTone1) %>%
count(total=n()) %>%
filter(!is.na(AttendTone1)) %>%
filter(!is.na(Lead_Track))
df1 %>%
ggplot(aes(y=AttendTone1, x=Lead_Rank2, size = n)) +
geom_point(alpha=0.5) +
scale_size_continuous("Count", range = c(1, 20)) +
geom_text(aes(label = n), size = 4) +
theme_minimal(base_size = 5 * .pt)
###
###clear all work space
rm(list=ls())
graphics.off()
require(tidyverse)
#import data
syl <- read_csv("data/masterDF.csv")
syl$Class_Size_Cat<-factor(syl$Class_Size_Cat, levels = c("small", "medium", "large"), labels = c("small", "medium", "large"))
df<-syl %>%
group_by(Lead_Rank2, GradeTone1) %>%
count(total=n()) %>%
filter(!is.na(GradeTone1)) %>%
filter(Lead_Rank2 %in% c("ASSISTANT PROFESSOR","ASSOCIATE PROFESSOR","PROFESSOR", "Dean Chair Director","LECTURER"))
df$Lead_Rank2<-factor(df$Lead_Rank2, levels = c("ASSISTANT PROFESSOR","ASSOCIATE PROFESSOR","PROFESSOR","Dean Chair Director","LECTURER"), labels = c("Asst. Professor", "Assoc. Professor", "Full Professor", "Dean Chair Director","Lecturer"))
df %>%
ggplot(aes(y=GradeTone1, x=Lead_Rank2, size = n)) +
geom_point(alpha=0.5) +
scale_size_continuous("Count", range = c(1, 20)) +
geom_text(aes(label = n), size = 4) +
theme_minimal(base_size = 5 * .pt)
syl$GradeTone1<- as.factor(syl$GradeTone1)
syl$Lead_Rank2<- as.factor(syl$Lead_Rank2)
syl2<-syl %>%
filter(Lead_Rank2 %in% c("ASSISTANT PROFESSOR","ASSOCIATE PROFESSOR","PROFESSOR", "Dean Chair Director","LECTURER"))
summary(lm(Exam_Grade_Prop ~ Year, data = syl))
summary(lm(Exam_Grade_Prop ~ Year, data = syl))
summary(lm(Exam_Grade_Prop ~ Department_Code, data = syl))
summary(lm(Exam_Grade_Prop ~ Lead_Rank2, data = syl2))
summary(lm(All_WC ~ Year, data = syl2))
summary(lm(Grade_WC ~ Year , data = syl))
summary(lm(Attend_WC ~ Year, data = syl))
summary(lm(Attend_WC ~ Lead_Rank2, data = syl2))
summary(lm(Grade_WC ~ Lead_Rank2, data = syl2))
summary(lm(All_WC ~ Lead_Rank2, data = syl2))
summary(lm(Attend_WC ~ Lead_Track, data = syl))
summary(lm(Grade_WC ~ Lead_Track, data = syl))
summary(lm(All_WC ~ Lead_Track, data = syl))
summary(lm(Exam_Grade_Prop ~ Lead_Track, data = syl))
summary(lm(All_tone_neg ~ Lead_Track, data = syl))
#multinomial logistic regression
require(nnet)
summary(multinom(GradeTone1~Lead_Track, data = syl2))
summary(mlogit(GradeTone1~Lead_Track, syl))
df1 %>%
ggplot(aes(y=AttendTone1, x=Lead_Rank2, size = n)) +
geom_point(alpha=0.5) +
scale_size_continuous("Count", range = c(1, 20)) +
geom_text(aes(label = n), size = 4) +
theme_minimal(base_size = 5 * .pt)
df1<-syl %>%
group_by(Lead_Rank2, AttendTone1) %>%
count(total=n()) %>%
filter(!is.na(AttendTone1)) %>%
filter(Lead_Rank2 %in% c("ASSISTANT PROFESSOR","ASSOCIATE PROFESSOR","PROFESSOR", "Dean Chair Director","LECTURER"))
df1$Lead_Rank2<-factor(df1$Lead_Rank2, levels = c("ASSISTANT PROFESSOR","ASSOCIATE PROFESSOR","PROFESSOR","Dean Chair Director","LECTURER"), labels = c("Asst. Professor", "Assoc. Professor", "Full Professor", "Dean Chair Director","Lecturer"))
df1 %>%
ggplot(aes(y=AttendTone1, x=Lead_Rank2, size = n)) +
geom_point(alpha=0.5) +
scale_size_continuous("Count", range = c(1, 20)) +
geom_text(aes(label = n), size = 4) +
theme_minimal(base_size = 5 * .pt)
df3<-syl %>%
group_by(Lead_Track, AttendTone1) %>%
count(total=n()) %>%
filter(!is.na(AttendTone1)) %>%
filter(!is.na(Lead_Track))
df1 %>%
ggplot(aes(y=AttendTone1, x=Lead_Rank2, size = n)) +
geom_point(alpha=0.5) +
scale_size_continuous("Count", range = c(1, 20)) +
geom_text(aes(label = n), size = 4) +
theme_minimal(base_size = 5 * .pt)
df1<-syl %>%
group_by(Lead_Rank2, AttendTone1) %>%
count(total=n()) %>%
filter(!is.na(AttendTone1)) %>%
filter(Lead_Rank2 %in% c("ASSISTANT PROFESSOR","ASSOCIATE PROFESSOR","PROFESSOR", "Dean Chair Director","LECTURER"))
df1$Lead_Rank2<-factor(df1$Lead_Rank2, levels = c("ASSISTANT PROFESSOR","ASSOCIATE PROFESSOR","PROFESSOR","Dean Chair Director","LECTURER"), labels = c("Asst. Professor", "Assoc. Professor", "Full Professor", "Dean Chair Director","Lecturer"))
df1 %>%
ggplot(aes(y=AttendTone1, x=Lead_Rank2, size = n)) +
geom_point(alpha=0.5) +
scale_size_continuous("Count", range = c(1, 20)) +
geom_text(aes(label = n), size = 4) +
theme_minimal(base_size = 5 * .pt)
df3<-syl %>%
group_by(Lead_Track, AttendTone1) %>%
count(total=n()) %>%
filter(!is.na(AttendTone1)) %>%
filter(!is.na(Lead_Track))
df3 %>%
ggplot(aes(y=AttendTone1, x=Lead_Track, size = n )) +
geom_point(alpha=0.5) +
scale_size_continuous("Count", range = c(1, 20)) +
geom_text(aes(label = n), size = 4) +
theme_minimal(base_size = 5 * .pt)
syl %>%
group_by(Class_Size_Cat, AttendTone1) %>%
count(total=n()) %>%
filter(!is.na(AttendTone1)) %>%
filter(!is.na(Class_Size_Cat)) %>%
ggplot(aes(y=AttendTone1, x=Class_Size_Cat, size = n)) +
geom_point(alpha=0.5) +
scale_size_continuous("Count", range = c(1, 20)) +
geom_text(aes(label = n), size = 4) +
theme_minimal(base_size = 5 * .pt)
syl %>%
group_by(Class_Size_Cat, GradeTone1) %>%
count(total=n()) %>%
filter(!is.na(GradeTone1)) %>%
filter(!is.na(Class_Size_Cat)) %>%
ggplot(aes(y=GradeTone1, x=Class_Size_Cat, size = n)) +
geom_point(alpha=0.5) +
scale_size_continuous("Count", range = c(1, 20)) +
geom_text(aes(label = n), size = 4) +
theme_minimal(base_size = 5 * .pt)
df3<-syl %>%
group_by(Lead_Track, AttendTone1) %>%
count(total=n()) %>%
filter(!is.na(AttendTone1)) %>%
filter(!is.na(Lead_Track))
df3 %>%
ggplot(aes(y=AttendTone1, x=Lead_Track, size = n )) +
geom_point(alpha=0.5) +
scale_size_continuous("Count", range = c(1, 20)) +
geom_text(aes(label = n), size = 4) +
theme_minimal(base_size = 5 * .pt)
syl %>%
group_by(Class_Size_Cat, AttendTone1) %>%
count(total=n()) %>%
filter(!is.na(AttendTone1)) %>%
filter(!is.na(Class_Size_Cat)) %>%
ggplot(aes(y=AttendTone1, x=Class_Size_Cat, size = n)) +
geom_point(alpha=0.5) +
scale_size_continuous("Count", range = c(1, 20)) +
geom_text(aes(label = n), size = 4) +
theme_minimal(base_size = 5 * .pt)
syl %>%
group_by(Class_Size_Cat, GradeTone1) %>%
count(total=n()) %>%
filter(!is.na(GradeTone1)) %>%
filter(!is.na(Class_Size_Cat)) %>%
ggplot(aes(y=GradeTone1, x=Class_Size_Cat, size = n)) +
geom_point(alpha=0.5) +
scale_size_continuous("Count", range = c(1, 20)) +
geom_text(aes(label = n), size = 4) +
theme_minimal(base_size = 5 * .pt)
df1<-syl %>%
group_by(Lead_Rank2, AttendTone1) %>%
count(total=n()) %>%
filter(!is.na(AttendTone1)) %>%
filter(Lead_Rank2 %in% c("ASSISTANT PROFESSOR","ASSOCIATE PROFESSOR","PROFESSOR", "Dean Chair Director","LECTURER"))
df1$Lead_Rank2<-factor(df1$Lead_Rank2, levels = c("ASSISTANT PROFESSOR","ASSOCIATE PROFESSOR","PROFESSOR","Dean Chair Director","LECTURER"), labels = c("Asst. Professor", "Assoc. Professor", "Full Professor", "Dean Chair Director","Lecturer"))
df1 %>%
ggplot(aes(y=AttendTone1, x=Lead_Rank2, size = n)) +
geom_point(alpha=0.5) +
scale_size_continuous("Count", range = c(1, 20)) +
geom_text(aes(label = n), size = 4) +
theme_minimal(base_size = 5 * .pt)
