<<<<<<< Updated upstream
=======
filter(Department_Code != "PSYC") %>%
mutate(SizeCategory = ifelse(`Class Size` < 30, "small",
ifelse(`Class Size` >75, "large", "medium"))) %>%
mutate(Diversity = case_when(DEI_Statement_Present=="yes" ~ 1,
DEI_Statement_Present=="no" ~ 0))
df4<-left_join(df3, wordGr, by = c("Index" = "Index")) %>%
rename("GradingWordCount" = "Word Count") %>%
filter(Department_Code != "PSYC") %>%
mutate(SizeCategory = ifelse(`Class Size` < 30, "small",
ifelse(`Class Size` >75, "large", "medium"))) %>%
mutate(Diversity = case_when(DEI_Statement_Present =="yes" ~ 1,
DEI_Statement_Present =="no" ~ 0))
df4<-left_join(df3, wordGr, by = c("Index" = "Index")) %>%
rename("GradingWordCount" = "Word Count") %>%
filter(Department_Code != "PSYC") %>%
mutate(SizeCategory = ifelse(`Class Size` < 30, "small",
ifelse(`Class Size` >75, "large", "medium"))) %>%
mutate(Diversity = case_when(DEI_Statement_Present ="yes" ~ 1,
DEI_Statement_Present ="no" ~ 0))
df4<-left_join(df3, wordGr, by = c("Index" = "Index")) %>%
rename("GradingWordCount" = "Word Count") %>%
filter(Department_Code != "PSYC") %>%
mutate(SizeCategory = ifelse(`Class Size` < 30, "small",
ifelse(`Class Size` >75, "large", "medium"))) %>%
mutate(Diversity = case_when(DEI_Statement_Present == "yes" ~ 1,
DEI_Statement_Present == "no" ~ 0))
df4<-left_join(df3, wordGr, by = c("Index" = "Index")) %>%
rename("GradingWordCount" = "Word Count") %>%
filter(Department_Code != "PSYC") %>%
mutate(SizeCategory = ifelse(`Class Size` < 30, "small",
ifelse(`Class Size` >75, "large", "medium"))) %>%
mutate(Diversity = case_when(DEI_Statement_Present == "yes" ~ "1",
DEI_Statement_Present == "no" ~ "0",
.default = "other"))
df4<-left_join(df3, wordGr, by = c("Index" = "Index")) %>%
rename("GradingWordCount" = "Word Count") %>%
filter(Department_Code != "PSYC") %>%
mutate(SizeCategory = ifelse(`Class Size` < 30, "small",
ifelse(`Class Size` >75, "large", "medium"))) %>%
mutate(Diversity = case_when(DEI_Statement_Present == "yes" ~ "1",
DEI_Statement_Present == "no" ~ "0"
))
df4<-left_join(df3, wordGr, by = c("Index" = "Index")) %>%
rename("GradingWordCount" = "Word Count") %>%
filter(Department_Code != "PSYC") %>%
mutate(SizeCategory = ifelse(`Class Size` < 30, "small",
ifelse(`Class Size` >75, "large", "medium"))) %>%
mutate(Diversity = ifelse(DEI_Statement_Present == "yes", 1, 0))
dfdiv<-df4 %>%
group_by(Year, DEI_Statement_Present) %>%
summarize(count = n())
>>>>>>> Stashed changes
View(dfdiv)
dfdiv<-df4 %>%
filter(!is.na(Year)) %>%
group_by(Year, DEI_Statement_Present) %>%
summarize(count = n())
dfdiv<-df4 %>%
filter(!is.na(Year)) %>%
group_by(Year, DEI_Statement_Present) %>%
summarize(count = n())
dfdiv<-df4 %>%
filter(!is.na(Year)) %>%
group_by(Year, DEI_Statement_Present) %>%
summarize(count = n()) %>%
geom_bar(stat="identity")+
theme_classic()+
labs(y = "Count", x = "Year")+
theme(axis.text=element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=12),
legend.text = element_text(size=12),
legend.title = element_text(size=12))
dfdiv<-df4 %>%
filter(!is.na(Year)) %>%
group_by(Year, DEI_Statement_Present) %>%
summarize(count = n()) %>%
ggplot(aes(x = factor(Year), y = count)) +
geom_bar(stat="identity")+
theme_classic()+
labs(y = "Count", x = "Year")+
theme(axis.text=element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=12),
legend.text = element_text(size=12),
legend.title = element_text(size=12))
df4 %>%
filter(!is.na(Year)) %>%
group_by(Year, DEI_Statement_Present) %>%
summarize(count = n()) %>%
ggplot(aes(x = factor(Year), y = count)) +
geom_bar(stat="identity")+
theme_classic()+
labs(y = "Count", x = "Year")+
theme(axis.text=element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=12),
legend.text = element_text(size=12),
legend.title = element_text(size=12))
df4 %>%
filter(!is.na(Year)) %>%
group_by(Year, DEI_Statement_Present) %>%
summarize(count = n()) %>%
filter(DEI_Statement_Present=="yes") %>%
ggplot(aes(x = factor(Year), y = count)) +
geom_bar(stat="identity")+
theme_classic()+
labs(y = "Count", x = "Year")+
theme(axis.text=element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=12),
legend.text = element_text(size=12),
legend.title = element_text(size=12))
df4 %>%
filter(!is.na(Year)) %>%
group_by(Year, DEI_Statement_Present) %>%
summarize(count = n()) %>%
#filter(DEI_Statement_Present=="yes") %>%
ggplot(aes(x = factor(Year), y = count)) +
geom_bar(stat="identity")+
theme_classic()+
labs(y = "Count", x = "Year")+
theme(axis.text=element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=12),
legend.text = element_text(size=12),
legend.title = element_text(size=12))
df4 %>%
filter(!is.na(Year)) %>%
group_by(Year, DEI_Statement_Present) %>%
summarize(count = n())
df4 %>%
filter(!is.na(Year)) %>%
group_by(Year, DEI_Statement_Present) %>%
summarize(count = n()) %>%
#filter(DEI_Statement_Present=="Yes") %>%
ggplot(aes(x = factor(Year), y = count)) +
geom_bar(stat="identity")+
theme_classic()+
labs(y = "Count", x = "Year")+
theme(axis.text=element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=12),
legend.text = element_text(size=12),
legend.title = element_text(size=12))
df4 %>%
filter(!is.na(Year)) %>%
group_by(Year, DEI_Statement_Present) %>%
summarize(count = n()) %>%
filter(DEI_Statement_Present=="Yes") %>%
ggplot(aes(x = factor(Year), y = count)) +
geom_bar(stat="identity")+
theme_classic()+
labs(y = "Count", x = "Year")+
theme(axis.text=element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=12),
legend.text = element_text(size=12),
legend.title = element_text(size=12))
tiff("Fig1_all.tiff",width=4,height=3,units="in",res=300)
df4 %>%
filter(!is.na(Year)) %>%
group_by(Year, DEI_Statement_Present) %>%
summarize(count = n()) %>%
filter(DEI_Statement_Present=="Yes") %>%
ggplot(aes(x = factor(Year), y = count)) +
geom_bar(stat="identity")+
theme_classic()+
labs(y = "Count of syllabi with diversity statements", x = "Year")+
theme(axis.text=element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=12),
legend.text = element_text(size=12),
legend.title = element_text(size=12))+
scale_y_continuous(expand = c(0,0))
dev.off()
tiff("Fig1_div.tiff",width=4,height=3,units="in",res=300)
df4 %>%
filter(!is.na(Year)) %>%
group_by(Year, DEI_Statement_Present) %>%
summarize(count = n()) %>%
filter(DEI_Statement_Present=="Yes") %>%
ggplot(aes(x = factor(Year), y = count)) +
geom_bar(stat="identity")+
theme_classic()+
labs(y = "Count of syllabi with diversity statements", x = "Year")+
theme(axis.text=element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=12),
legend.text = element_text(size=12),
legend.title = element_text(size=12))+
scale_y_continuous(expand = c(0,0))
dev.off()
tiff("Fig1_div.tiff",width=8,height=4,units="in",res=300)
df4 %>%
filter(!is.na(Year)) %>%
group_by(Year, DEI_Statement_Present) %>%
summarize(count = n()) %>%
filter(DEI_Statement_Present=="Yes") %>%
ggplot(aes(x = factor(Year), y = count)) +
geom_bar(stat="identity")+
theme_classic()+
labs(y = "Count of syllabi with diversity statements", x = "Year")+
theme(axis.text=element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=12),
legend.text = element_text(size=12),
legend.title = element_text(size=12))+
scale_y_continuous(expand = c(0,0))
dev.off()
df4 %>%
filter(!is.na(Year)) %>%
group_by(Year) %>%
summarize(count = n()) %>%
ggplot(aes(x = factor(Year), y = count)) +
geom_bar(stat="identity")+
theme_classic()+
labs(y = "Count of syllabi", x = "Year")+
theme(axis.text=element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=12),
legend.text = element_text(size=12),
legend.title = element_text(size=12))+
scale_y_continuous(expand = c(0,0))
tiff("FigALL.tiff",width=8,height=4,units="in",res=300)
df4 %>%
filter(!is.na(Year)) %>%
group_by(Year) %>%
summarize(count = n()) %>%
ggplot(aes(x = factor(Year), y = count)) +
geom_bar(stat="identity")+
theme_classic()+
labs(y = "Count of syllabi", x = "Year")+
theme(axis.text=element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=12),
legend.text = element_text(size=12),
legend.title = element_text(size=12))+
scale_y_continuous(expand = c(0,0))
dev.off()
###
require(tidyverse)
#import data
syl <- read_csv("syllabus-data.csv")
wordAT<-read_csv("attendword_count.csv")
wordGr<-read_csv("gradingword_count.csv")
enroll<-read_csv("finalenrollment.csv") %>%
select(c("Index", "Class Size", "Seats Avl", "% Filled"))
AttendSA <- read_csv("AttendSA.csv")
### combine files
df<-left_join(syl, AttendSA, by = c("Attend_File" = "File"))
df2<-left_join(df, enroll, by = c("Index"="Index"))
df3<-left_join(df2, wordAT, by = c("Attend_File" = "File Name")) %>%
rename("AttendWordCount"="Word Count")
df4<-left_join(df3, wordGr, by = c("Index" = "Index")) %>%
rename("GradingWordCount" = "Word Count") %>%
filter(Department_Code != "PSYC") %>%
mutate(SizeCategory = ifelse(`Class Size` < 30, "small",
ifelse(`Class Size` >75, "large", "medium")))
df4$SizeCategory<-factor(df4$SizeCategory, levels = c("small", "medium", "large"), labels = c("small", "medium", "large"))
#df2 <- df %>% distinct(courseID, .keep_all=TRUE)
tiff("FigALL.tiff",width=8,height=4,units="in",res=300)
df4 %>%
filter(!is.na(Year)) %>%
group_by(Year) %>%
summarize(count = n()) %>%
ggplot(aes(x = factor(Year), y = count)) +
geom_bar(stat="identity")+
theme_classic()+
labs(y = "Count of syllabi", x = "Year")+
theme(axis.text=element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=12),
legend.text = element_text(size=12),
legend.title = element_text(size=12))+
scale_y_continuous(expand = c(0,0))
dev.off()
tiff("Fig1_div.tiff",width=8,height=4,units="in",res=300)
df4 %>%
filter(!is.na(Year)) %>%
group_by(Year, DEI_Statement_Present) %>%
summarize(count = n()) %>%
filter(DEI_Statement_Present=="Yes") %>%
ggplot(aes(x = factor(Year), y = count)) +
geom_bar(stat="identity")+
theme_classic()+
labs(y = "Count of syllabi with diversity statements", x = "Year")+
theme(axis.text=element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=12),
legend.text = element_text(size=12),
legend.title = element_text(size=12))+
scale_y_continuous(expand = c(0,0))
dev.off()
tiff("Fig1_all.tiff",width=7,height=3,units="in",res=300)
df4 %>%
filter(!is.na(Year)) %>%
#filter(Department_Code=="BIOL") %>%
ggplot(aes(x = factor(Year), y = Polarity)) +
geom_boxplot(fill = "#bdd7e7")+
geom_point()+
theme_classic()+
labs(y = "Polarity", x = "")+
theme(axis.text=element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=12),
legend.text = element_text(size=12),
legend.title = element_text(size=12))
dev.off()
tiff("Fig2_all.tiff",width=7,height=3,units="in",res=300)
df4 %>%
filter(!is.na(Year)) %>%
#filter(Department_Code=="BIOL") %>%
ggplot(aes(x = factor(Year), y = Subjectivity)) +
geom_boxplot(fill = "#ffffb2")+
geom_point()+
theme_classic()+
labs(y = "Subjectivity", x = "")+
theme(axis.text=element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=12),
legend.text = element_text(size=12),
legend.title = element_text(size=12))
dev.off()
####
tiff("Fig1_biol.tiff",width=7,height=3,units="in",res=300)
df4 %>%
filter(!is.na(Year)) %>%
filter(Department_Code=="BIOL") %>%
filter()
ggplot(aes(x = factor(Year), y = Polarity)) +
geom_boxplot(fill = "#bdd7e7")+
geom_point()+
theme_classic()+
labs(y = "Polarity", x = "")+
theme(axis.text=element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=12),
legend.text = element_text(size=12),
legend.title = element_text(size=12))
tiff("Fig1_biol.tiff",width=7,height=3,units="in",res=300)
df4 %>%
filter(!is.na(Year)) %>%
filter(Department_Code=="BIOL") %>%
filter()
ggplot(aes(x = factor(Year), y = Polarity)) +
geom_boxplot(fill = "#bdd7e7")+
geom_point()+
theme_classic()+
labs(y = "Polarity", x = "")+
theme(axis.text=element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=12),
legend.text = element_text(size=12),
legend.title = element_text(size=12))
tiff("Fig1_biolpol.tiff",width=7,height=3,units="in",res=300)
df4 %>%
filter(!is.na(Year)) %>%
filter(Department_Code=="BIOL") %>%
ggplot(aes(x = factor(Year), y = Polarity)) +
geom_boxplot(fill = "#bdd7e7")+
geom_point()+
theme_classic()+
labs(y = "Polarity", x = "")+
theme(axis.text=element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=12),
legend.text = element_text(size=12),
legend.title = element_text(size=12))
dev.off()
tiff("Fig4_tonesgrade.tiff",width=8,height=3,units="in",res=300)
df6 %>%
#filter(!is.na(SizeCategory)) %>%
ggplot(aes(x = GradeTone1, y = n, fill = GradeTone1))+
geom_bar(stat="identity", width =  0.5)+
theme_classic()+
labs(y = "Grading Policy Tone", x = "Count")+
theme(axis.text=element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=12),
legend.text = element_text(size=12),
legend.title = element_text(size=12))+
scale_y_continuous(expand = c(0,0))+
scale_fill_manual(values = c("black","gray",'#a6cee3','#1f78b4','#e31a1c','#fdbf6f','#cab2d6','#ff7f00', "yellow"))
dev.off()
df7<-df4 %>%
filter(!is.na(AttendTone1)) %>%
mutate(AttendTone1 = tolower(AttendTone1)) %>%
group_by(AttendTone1, SizeCategory) %>%
summarize(n=n())
tiff("Fig4_tonesgrade.tiff",width=8,height=3,units="in",res=300)
df6 %>%
#filter(!is.na(SizeCategory)) %>%
ggplot(aes(x = GradeTone1, y = n, fill = GradeTone1))+
geom_bar(stat="identity", width =  0.5)+
theme_classic()+
labs(y = "Grading Policy Tone", x = "Count")+
theme(axis.text=element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=12),
legend.text = element_text(size=12),
legend.title = element_text(size=12))+
scale_y_continuous(expand = c(0,0))+
scale_fill_manual(values = c("black","gray",'#a6cee3','#1f78b4','#e31a1c','#fdbf6f','#cab2d6','#ff7f00', "yellow"))
dev.off()
tiff("Fig4_tonesgrade.tiff",width=8,height=3,units="in",res=300)
df6 %>%
#filter(!is.na(SizeCategory)) %>%
ggplot(aes(x = GradeTone1, y = n, fill = GradeTone1))+
geom_bar(stat="identity", width =  0.5)+
theme_classic()+
labs(x = "Grading Policy Tone", y = "Count")+
theme(axis.text=element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=12),
legend.text = element_text(size=12),
legend.title = element_text(size=12))+
scale_y_continuous(expand = c(0,0))+
scale_fill_manual(values = c("black","gray",'#a6cee3','#1f78b4','#e31a1c','#fdbf6f','#cab2d6','#ff7f00', "yellow"))
dev.off()
tiff("Fig4_tonesgrade.tiff",width=8,height=3,units="in",res=300)
df6 %>%
#filter(!is.na(SizeCategory)) %>%
ggplot(aes(x = GradeTone1, y = n, fill = GradeTone1))+
geom_bar(stat="identity", width =  0.5)+
theme_classic()+
labs(x = "Grading Policy Tone", y = "Count")+
theme(axis.text=element_text(size=12),
axis.title.x = element_text(size=12),
axis.title.y = element_text(size = 12),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=12),
legend.text = element_text(size=12),
legend.title = element_text(size=12),   legend.position = "none")+
scale_y_continuous(expand = c(0,0))+
scale_fill_manual(values = c("black","gray",'#a6cee3','#1f78b4','#e31a1c','#fdbf6f','#cab2d6','#ff7f00', "yellow"))
dev.off()
<<<<<<< Updated upstream
setwd("C:/Users/majewska/Documents/GitHub/syllabus-review-project/syllabi")
# folder with 1000s of PDFs
dest <- "C:/Users/majewska/Documents/GitHub/syllabus-review-project/syllabi"
# make a vector of PDF file names
myfiles <- list.files(path = dest, pattern = "pdf",  full.names = TRUE)
setwd("C:/Program Files/Glyph & Cog/XpdfReader-win64")
# convert each PDF file that is named in the vector into a text file
# text file is created in the same directory as the PDFs
# note that my pdftotext.exe is in a different location to yours
lapply(myfiles, function(i) system(paste('"C:/Program Files/Glyph & Cog/XpdfReader-win64/pdftotext.exe"',
paste0('"', i, '"')), wait = FALSE) )
# convert each PDF file that is named in the vector into a text file
# text file is created in the same directory as the PDFs
# note that my pdftotext.exe is in a different location to yours
lapply(myfiles, function(i) system(paste('"C:/Program Files/Glyph & Cog/XpdfReader-win64/xpdf.exe"',
paste0('"', i, '"')), wait = FALSE) )
lapply(myfiles, function(i) system(paste('"C:/Program Files/Glyph & Cog/XpdfReader-win64/xpdf.exe"',
paste0('"', i, '"')), wait = FALSE) )
# set options
options(stringsAsFactors = F)          # no automatic data transformation
options("scipen" = 100, "digits" = 12) # suppress math annotation
# install packages
install.packages("pdftools")
install.packages("tesseract")
install.packages("tidyverse")
install.packages("here")
install.packages("hunspell")
install.packages("flextable")
# install klippy for copy-to-clipboard button in code chunks
install.packages("remotes")
remotes::install_github("rlesur/klippy")
# you can use an url or a path that leads to a pdf document
pdf_path <- "C:/Users/majewska/Documents/GitHub/syllabus-review-project/syllabi"
# activate klippy for copy-to-clipboard button
klippy::klippy()
# activate klippy for copy-to-clipboard button
klippy::klippy()
# activate klippy for copy-to-clipboard button
klippy::klippy()
# you can use an url or a path that leads to a pdf document
pdf_path <- "C:/Users/majewska/Documents/GitHub/syllabus-review-project/syllabi/data/PDFs"
# you can use an url or a path that leads to a pdf document
pdf_path <- "C:/Users/majewska/Documents/GitHub/syllabus-review-project/syllabi/data/PDFs"
# extract text
txt_output <- pdftools::pdf_text(pdf_path) %>%
paste0(collapse = " ") %>%
paste0(collapse = " ") %>%
stringr::str_squish()
# activate packages
library(pdftools)
library(tesseract)
library(tidyverse)
library(here)
library(hunspell)
# set tesseract engine
eng <- tesseract("eng")
# activate klippy for copy-to-clipboard button
klippy::klippy()
# you can use an url or a path that leads to a pdf document
pdf_path <- "C:/Users/majewska/Documents/GitHub/syllabus-review-project/syllabi/data/PDFs"
# extract text
txt_output <- pdftools::pdf_text(pdf_path) %>%
paste0(collapse = " ") %>%
paste0(collapse = " ") %>%
stringr::str_squish()
# folder with 1000s of PDFs
dest <- "C:/Users/majewska/Documents/GitHub/syllabus-review-project/syllabi/data/PDFs"
# folder with 1000s of PDFs
dest <- "C:/Users/majewska/Documents/GitHub/syllabus-review-project/syllabi/data/PDFs"
# make a vector of PDF file names
myfiles <- list.files(path = dest, pattern = "pdf",  full.names = TRUE)
lapply(myfiles, function(i) system(paste('"C:/Program Files/Glyph & Cog/bin64/pdftotext.exe"',
paste0('"', i, '"')), wait = FALSE) )
lapply(myfiles, function(i) system(paste('"C:\Program Files\Glyph & Cog\xpdf-tools-win-4.04\bin64\pdftotext.exe"',
lapply(myfiles, function(i) system(paste('"C:/Program Files/Glyph & Cog/xpdf-tools-win-4.04/bin64/pdftotext.exe"',
paste0('"', i, '"')), wait = FALSE) )
# folder with 1000s of PDFs
dest <- "C:/Users/majewska/Documents/GitHub/syllabus-review-project/syllabi/words/PDFs"
# make a vector of PDF file names
myfiles <- list.files(path = dest, pattern = "pdf",  full.names = TRUE)
# note that my pdftotext.exe is in a different location to yours
lapply(myfiles, function(i) system(paste('"C:/Program Files/Glyph & Cog/xpdf-tools-win-4.04/bin64/pdftotext.exe"',
=======
setwd("/Users/majewska/Documents/GitHub/syllabus-review-project/syllabi")
# folder with 1000s of PDFs
dest <- "/Users/majewska/Documents/GitHub/syllabus-review-project/syllabi"
# make a vector of PDF file names
myfiles <- list.files(path = dest, pattern = "pdf",  full.names = TRUE)
# make a vector of PDF file names
myfiles <- list.files(path = dest, pattern = "pdf",  full.names = TRUE)
library(pdftools)
install.packages("pdftools")
library(pdftools)
# you can use an url or a path
pdf_url <- "https://cran.r-project.org/web/packages/pdftools/pdftools.pdf"
list_output <- pdftools::pdf_text('https://cran.r-project.org/web/packages/pdftools/pdftools.pdf')
# you get an element by page
length(list_output) # 5 elements for a 5 page pdf
list_output <- pdftools::pdf_text('https://cran.r-project.org/web/packages/pdftools/pdftools.pdf')
library(pdftools)
# you can use an url or a path
pdf_url <- "https://cran.r-project.org/web/packages/pdftools/pdftools.pdf"
list_output <- pdftools::pdf_text('https://cran.r-project.org/web/packages/pdftools/pdftools.pdf')
# you get an element by page
length(list_output) # 5 elements for a 5 page pdf
setwd("/Users/majewska/Downloads/pdf2text_mac")
# folder with 1000s of PDFs
dest <- "/Users/majewska/Documents/GitHub/syllabus-review-project/syllabi"
# make a vector of PDF file names
myfiles <- list.files(path = dest, pattern = "pdf",  full.names = TRUE)
# convert each PDF file that is named in the vector into a text file
# text file is created in the same directory as the PDFs
# note that my pdftotext.exe is in a different location to yours
lapply(myfiles, function(i) system(paste('"/Users/majewska/Downloads/pdf2text_mac/pdftotext.exe"',
>>>>>>> Stashed changes
paste0('"', i, '"')), wait = FALSE) )
